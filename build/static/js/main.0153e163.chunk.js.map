{"version":3,"sources":["components/App/Header/Header.jsx","components/App/App.jsx","serviceWorker.js","index.js"],"names":["Header","this","props","updateArraySize","updateSortingAlgorithm","arraySize","sortingAlgorithm","generateNewArray","startSorting","sorting","Box","background","elevation","direction","align","justify","pad","vertical","horizontal","gap","height","Button","label","onClick","disabled","style","cursor","RangeInput","value","onChange","min","max","step","opacity","width","Menu","items","textAlign","primary","Component","ANIMATION_SPEED_S","theme","global","colors","brand","focus","text","light","font","family","size","App","e","setState","target","innerText","arrayValues","bars","document","getElementsByClassName","containerWidth","getElementById","offsetWidth","barWidth","Math","floor","state","barMargin","i","push","random","undefined","backgroundColor","swap","arr","j","animation","temp","bubbleSort","array","k","length","heapify","len","largest","left","right","heapSort","merge","mainArray","startIdx","middleIdx","endIdx","auxiliaryArray","mergeSort","partition","pivot","pivotValue","partitionIndex","quickSort","animateSorting","animationSpeed","barId","animationType","barStyle","isLastIteration","setTimeout","map","a","sortedArr","slice","sort","b","forEach","id","Grommet","margin","position","key","responsive","className","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0153e163.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Box, Button, Menu, RangeInput } from 'grommet';\r\n\r\nclass Header extends Component {\r\n\trender() {\r\n\t\tlet {\r\n\t\t\tupdateArraySize,\r\n\t\t\tupdateSortingAlgorithm,\r\n\t\t\tarraySize,\r\n\t\t\tsortingAlgorithm,\r\n\t\t\tgenerateNewArray,\r\n\t\t\tstartSorting,\r\n\t\t\tsorting\r\n\t\t} = this.props;\r\n\t\treturn (\r\n\t\t\t<Box\r\n\t\t\t\tbackground=\"brand\"\r\n\t\t\t\televation=\"small\"\r\n\t\t\t\tdirection=\"row\"\r\n\t\t\t\talign=\"center\"\r\n\t\t\t\tjustify=\"center\"\r\n\t\t\t>\r\n\t\t\t\t<Box\r\n\t\t\t\t\tdirection=\"row\"\r\n\t\t\t\t\tpad={{ vertical: 'small', horizontal: 'small' }}\r\n\t\t\t\t\tgap=\"medium\"\r\n\t\t\t\t\talign=\"center\"\r\n\t\t\t\t\theight=\"72px\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tlabel=\"Generate New Array\"\r\n\t\t\t\t\t\t\tonClick={generateNewArray}\r\n\t\t\t\t\t\t\tdisabled={sorting}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box direction=\"row\" gap=\"small\" align=\"center\">\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tdisabled={sorting}\r\n\t\t\t\t\t\t\tstyle={{ cursor: 'default' }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tSize\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<RangeInput\r\n\t\t\t\t\t\t\tvalue={arraySize}\r\n\t\t\t\t\t\t\tonChange={updateArraySize}\r\n\t\t\t\t\t\t\tmin=\"5\"\r\n\t\t\t\t\t\t\tmax=\"100\"\r\n\t\t\t\t\t\t\tstep={1}\r\n\t\t\t\t\t\t\tdisabled={sorting}\r\n\t\t\t\t\t\t\tstyle={\r\n\t\t\t\t\t\t\t\tsorting\r\n\t\t\t\t\t\t\t\t\t? { opacity: '0.3', cursor: 'default' }\r\n\t\t\t\t\t\t\t\t\t: { opacity: '1', cursor: 'pointer' }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box align=\"center\" width=\"162px\">\r\n\t\t\t\t\t\t<Menu\r\n\t\t\t\t\t\t\tlabel={sortingAlgorithm}\r\n\t\t\t\t\t\t\tdisabled={sorting}\r\n\t\t\t\t\t\t\titems={[\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tlabel: 'Merge Sort',\r\n\t\t\t\t\t\t\t\t\tonClick: updateSortingAlgorithm\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tlabel: 'Quick Sort',\r\n\t\t\t\t\t\t\t\t\tonClick: updateSortingAlgorithm\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tlabel: 'Heap Sort',\r\n\t\t\t\t\t\t\t\t\tonClick: updateSortingAlgorithm\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tlabel: 'Bubble Sort',\r\n\t\t\t\t\t\t\t\t\tonClick: updateSortingAlgorithm\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box >\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\ttextAlign=\"center\"\r\n\t\t\t\t\t\tlabel=\"Start\"\r\n\t\t\t\t\t\tprimary\r\n\t\t\t\t\t\tonClick={startSorting}\r\n\t\t\t\t\t\tdisabled={sorting}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Box>\r\n\t\t\t\t</Box>\r\n\t\t\t\t\r\n\t\t\t</Box>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport { Box, Grommet } from 'grommet';\r\nimport Header from './Header';\r\n\r\n// change this value for the speed of the animation in seconds\r\nconst ANIMATION_SPEED_S = 5;\r\nconst theme = {\r\n\tglobal: {\r\n\t\tcolors: {\r\n\t\t\tbrand: '#061533',\r\n\t\t\tfocus: 'transparent',\r\n\t\t\t'accent-1': '#B578E8',\r\n\t\t\ttext: {\r\n\t\t\t\tlight: '#000'\r\n\t\t\t}\r\n\t\t},\r\n\t\tfont: {\r\n\t\t\tfamily: 'Poppins',\r\n\t\t\tsize: '18px'\r\n\t\t}\r\n\t}\r\n};\r\n\r\nclass App extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tarraySize: 50,\r\n\t\t\tsortingAlgorithm: 'Bubble Sort',\r\n\t\t\tarrayValues: [],\r\n\t\t\tsorting: false,\r\n\t\t\tbarWidth: 3,\r\n\t\t\tbarMargin: 1.5\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t// todo calculate animation speed\r\n\t\tthis.generateNewArray();\r\n\t}\r\n\r\n\tupdateArraySize = e => {\r\n\t\tthis.setState({ arraySize: e.target.value }, () =>\r\n\t\t\tthis.generateNewArray()\r\n\t\t);\r\n\t};\r\n\r\n\tupdateSortingAlgorithm = e => {\r\n\t\tthis.setState({ sortingAlgorithm: e.target.innerText });\r\n\t};\r\n\r\n\tgenerateNewArray = () => {\r\n\t\tconst arrayValues = [],\r\n\t\t\tbars = document.getElementsByClassName('array-bar');\r\n\t\tconst containerWidth = document.getElementById('chartBox').offsetWidth,\r\n\t\t\tbarWidth =\r\n\t\t\t\tMath.floor(containerWidth / this.state.arraySize - 3) / 2;\r\n\t\tlet barMargin = barWidth / 2;\r\n\t\tif (barMargin > 1.5) {\r\n\t\t\tbarMargin = 1.5;\r\n\t\t}\r\n\t\tthis.setState({ barWidth: barWidth, barMargin: barMargin });\r\n\t\tfor (let i = 0; i < this.state.arraySize; i++) {\r\n\t\t\tarrayValues.push(\r\n\t\t\t\t100 + 5 * Math.floor(Math.random() * Math.floor(100))\r\n\t\t\t);\r\n\t\t\tif (bars[i] !== undefined) {\r\n\t\t\t\tbars[i].style.backgroundColor = '#B578E8';\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tarrayValues: arrayValues\r\n\t\t});\r\n\t};\r\n\r\n\t// HELPER FUNCTION\r\n\r\n\tswap = (arr, i, j, animation) => {\r\n\t\tconst temp = arr[i];\r\n\t\t// animate swap\r\n\t\tanimation.push([arr[j], i, 'cV']);\r\n\t\tanimation.push([temp, j, 'cV']);\r\n\t\tarr[i] = arr[j];\r\n\t\tarr[j] = temp;\r\n\t};\r\n\r\n\t// BUBBLE SORT ALGORITHM\r\n\r\n\tbubbleSort = (array, animation) => {\r\n\t\tlet length = array.length;\r\n\t\tfor (let k = length - 1; k >= 0; k--) {\r\n\t\t\tfor (let i = 1; i <= k; i++) {\r\n\t\t\t\t// comparison add\r\n\t\t\t\tanimation.push(['#FF4040', i, 'c']);\r\n\t\t\t\tanimation.push(['#FF4040', i - 1, 'c']);\r\n\t\t\t\tif (array[i] < array[i - 1]) {\r\n\t\t\t\t\t// comparison success\r\n\t\t\t\t\tanimation.push(['#6FFFB0', i, 'c']);\r\n\t\t\t\t\tanimation.push(['#6FFFB0', i - 1, 'c']);\r\n\t\t\t\t\t// comparison success remove\r\n\t\t\t\t\tanimation.push(['#B578E8', i, 'c']);\r\n\t\t\t\t\tanimation.push(['#B578E8', i - 1, 'c']);\r\n\t\t\t\t\tthis.swap(array, i, i - 1, animation);\r\n\t\t\t\t}\r\n\t\t\t\t// comparison remove\r\n\t\t\t\tanimation.push(['#B578E8', i, 'c']);\r\n\t\t\t\tanimation.push(['#B578E8', i - 1, 'c']);\r\n\t\t\t}\r\n\t\t\tanimation.push(['#6399F1', k, 'c']);\r\n\t\t}\r\n\t\treturn array;\r\n\t};\r\n\r\n\t// HEAP SORT ALGORITHM\r\n\r\n\theapify = (arr, len, i, animation) => {\r\n\t\tlet largest = i;\r\n\t\tlet left = i * 2 + 1;\r\n\t\tlet right = left + 1;\r\n\r\n\t\tif (left < len) {\r\n\t\t\t// comparison add\r\n\t\t\tanimation.push(['#FF4040', largest, 'c']);\r\n\t\t\tanimation.push(['#FF4040', left, 'c']);\r\n\t\t\tif (arr[left] > arr[largest]) {\r\n\t\t\t\t// comparison success\r\n\t\t\t\tanimation.push(['#6FFFB0', largest, 'c']);\r\n\t\t\t\tanimation.push(['#6FFFB0', left, 'c']);\r\n\t\t\t\t// comparison success remove\r\n\t\t\t\tanimation.push(['#B578E8', largest, 'c']);\r\n\t\t\t\tanimation.push(['#B578E8', left, 'c']);\r\n\t\t\t\tlargest = left;\r\n\t\t\t}\r\n\t\t\t// comparison remove\r\n\t\t\tanimation.push(['#B578E8', largest, 'c']);\r\n\t\t\tanimation.push(['#B578E8', left, 'c']);\r\n\t\t}\r\n\r\n\t\tif (right < len) {\r\n\t\t\t// comparison add\r\n\t\t\tanimation.push(['#FF4040', largest, 'c']);\r\n\t\t\tanimation.push(['#FF4040', right, 'c']);\r\n\t\t\tif (arr[right] > arr[largest]) {\r\n\t\t\t\t// comparison success\r\n\t\t\t\tanimation.push(['#6FFFB0', largest, 'c']);\r\n\t\t\t\tanimation.push(['#6FFFB0', right, 'c']);\r\n\t\t\t\t// comparison success remove\r\n\t\t\t\tanimation.push(['#B578E8', largest, 'c']);\r\n\t\t\t\tanimation.push(['#B578E8', right, 'c']);\r\n\t\t\t\tlargest = right;\r\n\t\t\t}\r\n\t\t\t// comparison remove\r\n\t\t\tanimation.push(['#B578E8', largest, 'c']);\r\n\t\t\tanimation.push(['#B578E8', right, 'c']);\r\n\t\t}\r\n\r\n\t\tif (largest !== i) {\r\n\t\t\t// swap\r\n\t\t\tthis.swap(arr, i, largest, animation);\r\n\t\t\tthis.heapify(arr, len, largest, animation);\r\n\t\t}\r\n\r\n\t\treturn arr;\r\n\t};\r\n\r\n\theapSort = (arr, animation) => {\r\n\t\tlet len = arr.length;\r\n\t\tlet i = Math.floor(len / 2 - 1);\r\n\t\tlet k = len - 1;\r\n\r\n\t\twhile (i >= 0) {\r\n\t\t\tthis.heapify(arr, len, i, animation);\r\n\t\t\ti--;\r\n\t\t}\r\n\r\n\t\twhile (k >= 0) {\r\n\t\t\t//swap\r\n\t\t\tthis.swap(arr, 0, k, animation);\r\n\t\t\tanimation.push(['#6399F1', k, 'c']);\r\n\t\t\tthis.heapify(arr, k, 0, animation);\r\n\t\t\tk--;\r\n\t\t}\r\n\r\n\t\treturn arr;\r\n\t};\r\n\r\n\t// MERGE SORT ALGORITHM\r\n\r\n\tmerge = (\r\n\t\tmainArray,\r\n\t\tstartIdx,\r\n\t\tmiddleIdx,\r\n\t\tendIdx,\r\n\t\tauxiliaryArray,\r\n\t\tanimation\r\n\t) => {\r\n\t\tlet k = startIdx;\r\n\t\tlet i = startIdx;\r\n\t\tlet j = middleIdx + 1;\r\n\t\twhile (i <= middleIdx && j <= endIdx) {\r\n\t\t\t//comparison add\r\n\t\t\tanimation.push(['#FF4040', i, 'c']);\r\n\t\t\tanimation.push(['#FF4040', j, 'c']);\r\n\r\n\t\t\tif (auxiliaryArray[i] <= auxiliaryArray[j]) {\r\n\t\t\t\t//comparison success\r\n\t\t\t\tanimation.push(['#6FFFB0', i, 'c']);\r\n\t\t\t\tanimation.push(['#6FFFB0', j, 'c']);\r\n\t\t\t\t// comparison remove\r\n\t\t\t\tanimation.push(['#B578E8', i, 'c']);\r\n\t\t\t\tanimation.push(['#B578E8', j, 'c']);\r\n\t\t\t\t// animate swap\r\n\t\t\t\tanimation.push([auxiliaryArray[i], k, 'cV']);\r\n\t\t\t\tmainArray[k++] = auxiliaryArray[i++];\r\n\t\t\t} else {\r\n\t\t\t\t// comparison remove\r\n\t\t\t\tanimation.push(['#B578E8', i, 'c']);\r\n\t\t\t\tanimation.push(['#B578E8', j, 'c']);\r\n\t\t\t\t// animate swap\r\n\t\t\t\tanimation.push([auxiliaryArray[j], k, 'cV']);\r\n\t\t\t\tmainArray[k++] = auxiliaryArray[j++];\r\n\t\t\t}\r\n\t\t}\r\n\t\twhile (i <= middleIdx) {\r\n\t\t\t//comparison add\r\n\t\t\tanimation.push(['#FF4040', i, 'c']);\r\n\t\t\t// comparison remove\r\n\t\t\tanimation.push(['#B578E8', i, 'c']);\r\n\t\t\t// animate swap\r\n\t\t\tanimation.push([auxiliaryArray[i], k, 'cV']);\r\n\t\t\tmainArray[k++] = auxiliaryArray[i++];\r\n\t\t}\r\n\t\twhile (j <= endIdx) {\r\n\t\t\t//comparison add\r\n\t\t\tanimation.push(['#FF4040', j, 'c']);\r\n\t\t\t// comparison remove\r\n\t\t\tanimation.push(['#B578E8', j, 'c']);\r\n\t\t\t// animate swap\r\n\t\t\tanimation.push([auxiliaryArray[j], k, 'cV']);\r\n\t\t\tmainArray[k++] = auxiliaryArray[j++];\r\n\t\t}\r\n\t};\r\n\r\n\tmergeSort = (mainArray, startIdx, endIdx, auxiliaryArray, animation) => {\r\n\t\tif (startIdx === endIdx) return;\r\n\t\tconst middleIdx = Math.floor((startIdx + endIdx) / 2);\r\n\t\tthis.mergeSort(\r\n\t\t\tauxiliaryArray,\r\n\t\t\tstartIdx,\r\n\t\t\tmiddleIdx,\r\n\t\t\tmainArray,\r\n\t\t\tanimation\r\n\t\t);\r\n\t\tthis.mergeSort(\r\n\t\t\tauxiliaryArray,\r\n\t\t\tmiddleIdx + 1,\r\n\t\t\tendIdx,\r\n\t\t\tmainArray,\r\n\t\t\tanimation\r\n\t\t);\r\n\t\tthis.merge(\r\n\t\t\tmainArray,\r\n\t\t\tstartIdx,\r\n\t\t\tmiddleIdx,\r\n\t\t\tendIdx,\r\n\t\t\tauxiliaryArray,\r\n\t\t\tanimation\r\n\t\t);\r\n\t};\r\n\r\n\t// QUICK SORT ALGORITHM\r\n\r\n\tpartition = (arr, pivot, left, right, animation) => {\r\n\t\tlet pivotValue = arr[pivot],\r\n\t\t\tpartitionIndex = left;\r\n\t\t// add pivot\r\n\t\tanimation.push(['#FF4040', pivot, 'c']);\r\n\t\tfor (let i = left; i < right; i++) {\r\n\t\t\t// add partition index\r\n\t\t\tanimation.push(['#FFAA15', partitionIndex, 'c']);\r\n\t\t\t// add comparison\r\n\t\t\tanimation.push(['#FF4040', i, 'c']);\r\n\t\t\tif (arr[i] < pivotValue) {\r\n\t\t\t\t// comparison success\r\n\t\t\t\tanimation.push(['#6FFFB0', i, 'c']);\r\n\t\t\t\t// remove comparison success\r\n\t\t\t\tanimation.push(['#B578E8', i, 'c']);\r\n\t\t\t\tthis.swap(arr, i, partitionIndex, animation);\r\n\t\t\t\t// remove old partition index\r\n\t\t\t\tanimation.push(['#B578E8', partitionIndex, 'c']);\r\n\t\t\t\tpartitionIndex++;\r\n\t\t\t\t// add new partition index\r\n\t\t\t\tanimation.push(['#FFAA15', partitionIndex, 'c']);\r\n\t\t\t}\r\n\t\t\t// remove comparison\r\n\t\t\tanimation.push(['#B578E8', i, 'c']);\r\n\t\t}\r\n\t\t// remove partition index\r\n\t\tanimation.push(['#B578E8', partitionIndex, 'c']);\r\n\t\tthis.swap(arr, right, partitionIndex, animation);\r\n\t\t// remove pivot\r\n\t\tanimation.push(['#B578E8', pivot, 'c']);\r\n\t\treturn partitionIndex;\r\n\t};\r\n\r\n\tquickSort = (arr, left, right, animation) => {\r\n\t\tlet pivot, partitionIndex;\r\n\r\n\t\tif (left < right) {\r\n\t\t\tpivot = right;\r\n\t\t\tpartitionIndex = this.partition(arr, pivot, left, right, animation);\r\n\r\n\t\t\t//sort left and right\r\n\t\t\tthis.quickSort(arr, left, partitionIndex - 1, animation);\r\n\t\t\tthis.quickSort(arr, partitionIndex + 1, right, animation);\r\n\t\t}\r\n\r\n\t\treturn arr;\r\n\t};\r\n\r\n\t// ANIMATE SORTING\r\n\r\n\tanimateSorting = animation => {\r\n\t\tlet animationSpeed = 1000 * ANIMATION_SPEED_S / animation.length;\r\n\t\tfor (let i = 0; i < animation.length; i++) {\r\n\t\t\tconst [value, barId, animationType] = animation[i],\r\n\t\t\t\tbarStyle = document.getElementsByClassName('array-bar')[barId]\r\n\t\t\t\t\t.style,\r\n\t\t\t\tisLastIteration = i === animation.length - 1 ? true : false;\r\n\t\t\tif (animationType === 'c') {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tbarStyle.backgroundColor = value;\r\n\t\t\t\t}, i * animationSpeed);\r\n\t\t\t} else if (animationType === 'cV') {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tbarStyle.height = `${value}px`;\r\n\t\t\t\t}, i * animationSpeed);\r\n\t\t\t}\r\n\r\n\t\t\tif (isLastIteration) {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.setState({ sorting: false });\r\n\t\t\t\t}, i * animationSpeed);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tstartSorting = () => {\r\n\t\tthis.setState({ sorting: true });\r\n\t\tlet arr = this.state.arrayValues.map(a => a),\r\n\t\t\tsortedArr = arr.slice().sort((a, b) => a - b),\r\n\t\t\tanimation = [];\r\n\r\n\t\tif (this.state.sortingAlgorithm === 'Quick Sort') {\r\n\t\t\tthis.quickSort(arr, 0, arr.length - 1, animation);\r\n\t\t} else if (this.state.sortingAlgorithm === 'Merge Sort') {\r\n\t\t\tlet auxiliaryArray = arr.slice();\r\n\t\t\tthis.mergeSort(arr, 0, arr.length - 1, auxiliaryArray, animation);\r\n\t\t} else if (this.state.sortingAlgorithm === 'Heap Sort') {\r\n\t\t\tthis.heapSort(arr, animation);\r\n\t\t} else if (this.state.sortingAlgorithm === 'Bubble Sort') {\r\n\t\t\tthis.bubbleSort(arr, animation);\r\n\t\t}\r\n\r\n\t\tarr.forEach((value, id) => {\r\n\t\t\tif (sortedArr[id] === value) {\r\n\t\t\t\tanimation.push(['#6399F1', id, 'c']);\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.animateSorting(animation);\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Grommet theme={theme}>\r\n\t\t\t\t<Header\r\n\t\t\t\t\tupdateArraySize={this.updateArraySize}\r\n\t\t\t\t\tupdateSortingAlgorithm={this.updateSortingAlgorithm}\r\n\t\t\t\t\tarraySize={this.state.arraySize}\r\n\t\t\t\t\tsortingAlgorithm={this.state.sortingAlgorithm}\r\n\t\t\t\t\tgenerateNewArray={this.generateNewArray}\r\n\t\t\t\t\tstartSorting={this.startSorting}\r\n\t\t\t\t\tsorting={this.state.sorting}\r\n\t\t\t\t/>\r\n\t\t\t\t<Box\r\n\t\t\t\t\tjustify=\"center\"\r\n\t\t\t\t\tmargin={{ horizontal: 'xlarge'/*, top: 'medium'*/ }}\r\n\t\t\t\t\tdirection=\"row\"\r\n\t\t\t\t\tid=\"chartBox\"\r\n\t\t\t\t\t//align=\"center\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{this.state.arrayValues.map((value, position) => (\r\n\t\t\t\t\t\t<Box\r\n\t\t\t\t\t\t\tkey={position}\r\n\t\t\t\t\t\t\twidth={`${this.state.barWidth}px`}\r\n\t\t\t\t\t\t\tmargin={`${this.state.barMargin}px`}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\theight: `${value}px`\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tresponsive={false}\r\n\t\t\t\t\t\t\tbackground=\"accent-1\"\r\n\t\t\t\t\t\t\tclassName=\"array-bar\"\r\n\t\t\t\t\t\t></Box>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Box>\r\n\t\t\t</Grommet>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}