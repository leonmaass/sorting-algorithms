{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport { Keyboard } from '../Keyboard';\nimport { withFocus, withForwardRef } from '../hocs';\nimport { StyledTextArea } from './StyledTextArea';\n\nvar TextArea = function TextArea(_ref) {\n  var fill = _ref.fill,\n      forwardRef = _ref.forwardRef,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"fill\", \"forwardRef\"]);\n\n  var onEsc = function onEsc(event) {\n    // we have to stop both synthetic events and native events\n    // drop and layer should not close by pressing esc on this input\n    event.stopPropagation();\n    event.nativeEvent.stopImmediatePropagation();\n  };\n\n  return React.createElement(Keyboard, {\n    onEsc: onEsc\n  }, React.createElement(StyledTextArea, _extends({\n    ref: forwardRef,\n    fillArg: fill\n  }, rest)));\n};\n\nvar TextAreaDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line global-require\n  TextAreaDoc = require('./doc').doc(TextArea);\n}\n\nvar TextAreaWrapper = compose(withFocus({\n  focusWithMouse: true\n}), withForwardRef)(TextAreaDoc || TextArea);\nexport { TextAreaWrapper as TextArea };","map":null,"metadata":{},"sourceType":"module"}