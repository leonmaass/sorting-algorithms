{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Work\\\\Desktop\\\\Coden\\\\sorting-algorithms\\\\src\\\\components\\\\App\\\\App.jsx\";\nimport React, { Component } from 'react';\nimport { Box, Chart, Grommet } from 'grommet';\nimport Header from './Header';\nconst theme = {\n  global: {\n    colors: {\n      brand: '#061533',\n      focus: 'transparent'\n    },\n    font: {\n      family: 'Poppins',\n      size: '18px'\n    }\n  }\n};\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      arraySize: 5,\n      sortingAlgorithm: 'Quick Sort',\n      arrayValues: [24, 63, 13, 94, 78],\n      arrayBounds: [0, 4],\n      chartThickness: 'xlarge',\n      sorting: false\n    };\n\n    this.updateArraySize = e => {\n      this.setState({\n        arraySize: e.target.value\n      });\n    };\n\n    this.updateSortingAlgorithm = e => {\n      this.setState({\n        sortingAlgorithm: e.target.innerText\n      });\n    };\n\n    this.generateNewArray = () => {\n      let arrayValues = [];\n\n      for (let i = 0; i < this.state.arraySize; i++) {\n        arrayValues.push(1 + Math.floor(Math.random() * Math.floor(100)));\n      }\n\n      this.calculateThickness();\n      this.setState({\n        arrayValues: arrayValues,\n        arrayBounds: [0, this.state.arraySize - 1]\n      });\n    };\n\n    this.calculateThickness = () => {\n      if (this.state.arraySize <= 5) {\n        this.setState({\n          chartThickness: 'xlarge'\n        });\n      } else if (this.state.arraySize <= 10) {\n        this.setState({\n          chartThickness: 'large'\n        });\n      } else if (this.state.arraySize <= 25) {\n        this.setState({\n          chartThickness: 'medium'\n        });\n      } else if (this.state.arraySize <= 60) {\n        this.setState({\n          chartThickness: 'small'\n        });\n      } else {\n        this.setState({\n          chartThickness: 'xsmall'\n        });\n      }\n    };\n\n    this.swap = (arr, i, j) => {\n      var temp = arr[i];\n      arr[i] = arr[j];\n      arr[j] = temp;\n    };\n\n    this.partition = (arr, pivot, left, right) => {\n      var pivotValue = arr[pivot],\n          partitionIndex = left;\n      setInterval(() => {}, 10);\n\n      for (var i = left; i < right; i++) {\n        if (arr[i] < pivotValue) {\n          this.swap(arr, i, partitionIndex);\n          partitionIndex++;\n        }\n      }\n\n      this.swap(arr, right, partitionIndex);\n      return partitionIndex;\n    };\n\n    this.quickSort = (arr, left, right) => {\n      var pivot, partitionIndex;\n\n      if (left < right) {\n        pivot = right;\n        partitionIndex = this.partition(arr, pivot, left, right); //sort left and right\n\n        this.quickSort(arr, left, partitionIndex - 1);\n        this.quickSort(arr, partitionIndex + 1, right);\n      }\n\n      this.setState({\n        arrayValues: arr\n      });\n    };\n\n    this.startSorting = () => {\n      this.setState({\n        sorting: true\n      });\n      var arr = this.state.arrayValues;\n\n      if (this.state.sortingAlgorithm === 'Quick Sort') {\n        this.quickSort(arr, 0, arr.length - 1);\n      }\n\n      this.setState({\n        sorting: false\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(Grommet, {\n      theme: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Header, {\n      updateArraySize: this.updateArraySize,\n      updateSortingAlgorithm: this.updateSortingAlgorithm,\n      arraySize: this.state.arraySize,\n      sortingAlgorithm: this.state.sortingAlgorithm,\n      generateNewArray: this.generateNewArray,\n      startSorting: this.startSorting,\n      sorting: this.state.sorting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(Box, {\n      justify: \"center\",\n      align: \"center\",\n      margin: \"xlarge\",\n      height: \"70vh\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Chart, {\n      bounds: [this.state.arrayBounds, [0, 100]],\n      size: \"full\",\n      thickness: this.state.chartThickness,\n      values: this.state.arrayValues,\n      width: \"750px\",\n      alignSelf: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Work\\Desktop\\Coden\\sorting-algorithms\\src\\components\\App\\App.jsx"],"names":["React","Component","Box","Chart","Grommet","Header","theme","global","colors","brand","focus","font","family","size","App","state","arraySize","sortingAlgorithm","arrayValues","arrayBounds","chartThickness","sorting","updateArraySize","e","setState","target","value","updateSortingAlgorithm","innerText","generateNewArray","i","push","Math","floor","random","calculateThickness","swap","arr","j","temp","partition","pivot","left","right","pivotValue","partitionIndex","setInterval","quickSort","startSorting","length","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,KAAd,EAAqBC,OAArB,QAAoC,SAApC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,MAAMC,KAAK,GAAG;AACbC,EAAAA,MAAM,EAAE;AACPC,IAAAA,MAAM,EAAE;AACPC,MAAAA,KAAK,EAAE,SADA;AAEPC,MAAAA,KAAK,EAAE;AAFA,KADD;AAKPC,IAAAA,IAAI,EAAE;AACLC,MAAAA,MAAM,EAAE,SADH;AAELC,MAAAA,IAAI,EAAE;AAFD;AALC;AADK,CAAd;;AAaA,MAAMC,GAAN,SAAkBb,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC3Bc,KAD2B,GACnB;AACPC,MAAAA,SAAS,EAAE,CADJ;AAEPC,MAAAA,gBAAgB,EAAE,YAFX;AAGPC,MAAAA,WAAW,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,CAHN;AAIPC,MAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ,CAJN;AAKPC,MAAAA,cAAc,EAAE,QALT;AAMPC,MAAAA,OAAO,EAAE;AANF,KADmB;;AAAA,SAU3BC,eAV2B,GAUTC,CAAC,IAAI;AACtB,WAAKC,QAAL,CAAc;AAAER,QAAAA,SAAS,EAAEO,CAAC,CAACE,MAAF,CAASC;AAAtB,OAAd;AACA,KAZ0B;;AAAA,SAc3BC,sBAd2B,GAcFJ,CAAC,IAAI;AAC7B,WAAKC,QAAL,CAAc;AAAEP,QAAAA,gBAAgB,EAAEM,CAAC,CAACE,MAAF,CAASG;AAA7B,OAAd;AACA,KAhB0B;;AAAA,SAkB3BC,gBAlB2B,GAkBR,MAAM;AACxB,UAAIX,WAAW,GAAG,EAAlB;;AACA,WAAK,IAAIY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKf,KAAL,CAAWC,SAA/B,EAA0Cc,CAAC,EAA3C,EAA+C;AAC9CZ,QAAAA,WAAW,CAACa,IAAZ,CAAiB,IAAIC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAW,GAAX,CAA3B,CAArB;AACA;;AACD,WAAKE,kBAAL;AACA,WAAKX,QAAL,CAAc;AACbN,QAAAA,WAAW,EAAEA,WADA;AAEbC,QAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,KAAKJ,KAAL,CAAWC,SAAX,GAAuB,CAA3B;AAFA,OAAd;AAIA,KA5B0B;;AAAA,SA8B3BmB,kBA9B2B,GA8BN,MAAM;AAC1B,UAAI,KAAKpB,KAAL,CAAWC,SAAX,IAAwB,CAA5B,EAA+B;AAC9B,aAAKQ,QAAL,CAAc;AAAEJ,UAAAA,cAAc,EAAE;AAAlB,SAAd;AACA,OAFD,MAEO,IAAI,KAAKL,KAAL,CAAWC,SAAX,IAAwB,EAA5B,EAAgC;AACtC,aAAKQ,QAAL,CAAc;AAAEJ,UAAAA,cAAc,EAAE;AAAlB,SAAd;AACA,OAFM,MAEA,IAAI,KAAKL,KAAL,CAAWC,SAAX,IAAwB,EAA5B,EAAgC;AACtC,aAAKQ,QAAL,CAAc;AAAEJ,UAAAA,cAAc,EAAE;AAAlB,SAAd;AACA,OAFM,MAEA,IAAI,KAAKL,KAAL,CAAWC,SAAX,IAAwB,EAA5B,EAAgC;AACtC,aAAKQ,QAAL,CAAc;AAAEJ,UAAAA,cAAc,EAAE;AAAlB,SAAd;AACA,OAFM,MAEA;AACN,aAAKI,QAAL,CAAc;AAAEJ,UAAAA,cAAc,EAAE;AAAlB,SAAd;AACA;AACD,KA1C0B;;AAAA,SA4C3BgB,IA5C2B,GA4CpB,CAACC,GAAD,EAAMP,CAAN,EAASQ,CAAT,KAAe;AACrB,UAAIC,IAAI,GAAGF,GAAG,CAACP,CAAD,CAAd;AACAO,MAAAA,GAAG,CAACP,CAAD,CAAH,GAASO,GAAG,CAACC,CAAD,CAAZ;AACAD,MAAAA,GAAG,CAACC,CAAD,CAAH,GAASC,IAAT;AACA,KAhD0B;;AAAA,SAkD3BC,SAlD2B,GAkDf,CAACH,GAAD,EAAMI,KAAN,EAAaC,IAAb,EAAmBC,KAAnB,KAA6B;AACxC,UAAIC,UAAU,GAAGP,GAAG,CAACI,KAAD,CAApB;AAAA,UACCI,cAAc,GAAGH,IADlB;AAEAI,MAAAA,WAAW,CAAC,MAAM,CAEjB,CAFU,EAER,EAFQ,CAAX;;AAGA,WAAK,IAAIhB,CAAC,GAAGY,IAAb,EAAmBZ,CAAC,GAAGa,KAAvB,EAA8Bb,CAAC,EAA/B,EAAmC;AAClC,YAAIO,GAAG,CAACP,CAAD,CAAH,GAASc,UAAb,EAAyB;AACxB,eAAKR,IAAL,CAAUC,GAAV,EAAeP,CAAf,EAAkBe,cAAlB;AACAA,UAAAA,cAAc;AACd;AACD;;AACD,WAAKT,IAAL,CAAUC,GAAV,EAAeM,KAAf,EAAsBE,cAAtB;AACA,aAAOA,cAAP;AACA,KAhE0B;;AAAA,SAkE3BE,SAlE2B,GAkEf,CAACV,GAAD,EAAMK,IAAN,EAAYC,KAAZ,KAAsB;AACjC,UAAIF,KAAJ,EAAWI,cAAX;;AAEA,UAAIH,IAAI,GAAGC,KAAX,EAAkB;AACjBF,QAAAA,KAAK,GAAGE,KAAR;AACAE,QAAAA,cAAc,GAAG,KAAKL,SAAL,CAAeH,GAAf,EAAoBI,KAApB,EAA2BC,IAA3B,EAAiCC,KAAjC,CAAjB,CAFiB,CAIjB;;AACA,aAAKI,SAAL,CAAeV,GAAf,EAAoBK,IAApB,EAA0BG,cAAc,GAAG,CAA3C;AACA,aAAKE,SAAL,CAAeV,GAAf,EAAoBQ,cAAc,GAAG,CAArC,EAAwCF,KAAxC;AACA;;AACD,WAAKnB,QAAL,CAAc;AAAEN,QAAAA,WAAW,EAAEmB;AAAf,OAAd;AACA,KA9E0B;;AAAA,SAgF3BW,YAhF2B,GAgFZ,MAAM;AACpB,WAAKxB,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,UAAIgB,GAAG,GAAG,KAAKtB,KAAL,CAAWG,WAArB;;AACA,UAAI,KAAKH,KAAL,CAAWE,gBAAX,KAAgC,YAApC,EAAkD;AACjD,aAAK8B,SAAL,CAAeV,GAAf,EAAoB,CAApB,EAAuBA,GAAG,CAACY,MAAJ,GAAa,CAApC;AACA;;AACD,WAAKzB,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,KAvF0B;AAAA;;AAyF3B6B,EAAAA,MAAM,GAAG;AACR,WACC,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE5C,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,MAAD;AACC,MAAA,eAAe,EAAE,KAAKgB,eADvB;AAEC,MAAA,sBAAsB,EAAE,KAAKK,sBAF9B;AAGC,MAAA,SAAS,EAAE,KAAKZ,KAAL,CAAWC,SAHvB;AAIC,MAAA,gBAAgB,EAAE,KAAKD,KAAL,CAAWE,gBAJ9B;AAKC,MAAA,gBAAgB,EAAE,KAAKY,gBALxB;AAMC,MAAA,YAAY,EAAE,KAAKmB,YANpB;AAOC,MAAA,OAAO,EAAE,KAAKjC,KAAL,CAAWM,OAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAUC,oBAAC,GAAD;AACC,MAAA,OAAO,EAAC,QADT;AAEC,MAAA,KAAK,EAAC,QAFP;AAGC,MAAA,MAAM,EAAC,QAHR;AAIC,MAAA,MAAM,EAAC,MAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMC,oBAAC,KAAD;AACC,MAAA,MAAM,EAAE,CAAC,KAAKN,KAAL,CAAWI,WAAZ,EAAyB,CAAC,CAAD,EAAI,GAAJ,CAAzB,CADT;AAEC,MAAA,IAAI,EAAC,MAFN;AAGC,MAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWK,cAHvB;AAIC,MAAA,MAAM,EAAE,KAAKL,KAAL,CAAWG,WAJpB;AAKC,MAAA,KAAK,EAAC,OALP;AAMC,MAAA,SAAS,EAAC,QANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAND,CAVD,CADD;AA4BA;;AAtH0B;;AAyH5B,eAAeJ,GAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Box, Chart, Grommet } from 'grommet';\r\nimport Header from './Header';\r\nconst theme = {\r\n\tglobal: {\r\n\t\tcolors: {\r\n\t\t\tbrand: '#061533',\r\n\t\t\tfocus: 'transparent'\r\n\t\t},\r\n\t\tfont: {\r\n\t\t\tfamily: 'Poppins',\r\n\t\t\tsize: '18px'\r\n\t\t}\r\n\t}\r\n};\r\n\r\nclass App extends Component {\r\n\tstate = {\r\n\t\tarraySize: 5,\r\n\t\tsortingAlgorithm: 'Quick Sort',\r\n\t\tarrayValues: [24, 63, 13, 94, 78],\r\n\t\tarrayBounds: [0, 4],\r\n\t\tchartThickness: 'xlarge',\r\n\t\tsorting: false\r\n\t};\r\n\r\n\tupdateArraySize = e => {\r\n\t\tthis.setState({ arraySize: e.target.value });\r\n\t};\r\n\r\n\tupdateSortingAlgorithm = e => {\r\n\t\tthis.setState({ sortingAlgorithm: e.target.innerText });\r\n\t};\r\n\r\n\tgenerateNewArray = () => {\r\n\t\tlet arrayValues = [];\r\n\t\tfor (let i = 0; i < this.state.arraySize; i++) {\r\n\t\t\tarrayValues.push(1 + Math.floor(Math.random() * Math.floor(100)));\r\n\t\t}\r\n\t\tthis.calculateThickness();\r\n\t\tthis.setState({\r\n\t\t\tarrayValues: arrayValues,\r\n\t\t\tarrayBounds: [0, this.state.arraySize - 1]\r\n\t\t});\r\n\t};\r\n\r\n\tcalculateThickness = () => {\r\n\t\tif (this.state.arraySize <= 5) {\r\n\t\t\tthis.setState({ chartThickness: 'xlarge' });\r\n\t\t} else if (this.state.arraySize <= 10) {\r\n\t\t\tthis.setState({ chartThickness: 'large' });\r\n\t\t} else if (this.state.arraySize <= 25) {\r\n\t\t\tthis.setState({ chartThickness: 'medium' });\r\n\t\t} else if (this.state.arraySize <= 60) {\r\n\t\t\tthis.setState({ chartThickness: 'small' });\r\n\t\t} else {\r\n\t\t\tthis.setState({ chartThickness: 'xsmall' });\r\n\t\t}\r\n\t};\r\n\r\n\tswap = (arr, i, j) => {\r\n\t\tvar temp = arr[i];\r\n\t\tarr[i] = arr[j];\r\n\t\tarr[j] = temp;\r\n\t};\r\n\r\n\tpartition = (arr, pivot, left, right) => {\r\n\t\tvar pivotValue = arr[pivot],\r\n\t\t\tpartitionIndex = left;\r\n\t\tsetInterval(() => {\r\n\t\t\t\r\n\t\t}, 10);\r\n\t\tfor (var i = left; i < right; i++) {\r\n\t\t\tif (arr[i] < pivotValue) {\r\n\t\t\t\tthis.swap(arr, i, partitionIndex);\r\n\t\t\t\tpartitionIndex++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.swap(arr, right, partitionIndex);\r\n\t\treturn partitionIndex;\r\n\t};\r\n\r\n\tquickSort = (arr, left, right) => {\r\n\t\tvar pivot, partitionIndex;\r\n\r\n\t\tif (left < right) {\r\n\t\t\tpivot = right;\r\n\t\t\tpartitionIndex = this.partition(arr, pivot, left, right);\r\n\r\n\t\t\t//sort left and right\r\n\t\t\tthis.quickSort(arr, left, partitionIndex - 1);\r\n\t\t\tthis.quickSort(arr, partitionIndex + 1, right);\r\n\t\t}\r\n\t\tthis.setState({ arrayValues: arr });\r\n\t};\r\n\r\n\tstartSorting = () => {\r\n\t\tthis.setState({ sorting: true });\r\n\t\tvar arr = this.state.arrayValues;\r\n\t\tif (this.state.sortingAlgorithm === 'Quick Sort') {\r\n\t\t\tthis.quickSort(arr, 0, arr.length - 1);\r\n\t\t}\r\n\t\tthis.setState({ sorting: false });\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Grommet theme={theme}>\r\n\t\t\t\t<Header\r\n\t\t\t\t\tupdateArraySize={this.updateArraySize}\r\n\t\t\t\t\tupdateSortingAlgorithm={this.updateSortingAlgorithm}\r\n\t\t\t\t\tarraySize={this.state.arraySize}\r\n\t\t\t\t\tsortingAlgorithm={this.state.sortingAlgorithm}\r\n\t\t\t\t\tgenerateNewArray={this.generateNewArray}\r\n\t\t\t\t\tstartSorting={this.startSorting}\r\n\t\t\t\t\tsorting={this.state.sorting}\r\n\t\t\t\t/>\r\n\t\t\t\t<Box\r\n\t\t\t\t\tjustify=\"center\"\r\n\t\t\t\t\talign=\"center\"\r\n\t\t\t\t\tmargin=\"xlarge\"\r\n\t\t\t\t\theight=\"70vh\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<Chart\r\n\t\t\t\t\t\tbounds={[this.state.arrayBounds, [0, 100]]}\r\n\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\tthickness={this.state.chartThickness}\r\n\t\t\t\t\t\tvalues={this.state.arrayValues}\r\n\t\t\t\t\t\twidth=\"750px\"\r\n\t\t\t\t\t\talignSelf=\"center\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Box>\r\n\t\t\t</Grommet>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}